
/* Smart UI v12.0.0 (2022-01-16) 
Copyright (c) 2011-2021 jQWidgets. 
License: https://htmlelements.com/license/ */ //

Smart.Utilities.Assign("Grid.View",class{createBasicKanban(){this._initKanbanView("basic")}createBlankKanban(){this._initKanbanView("blank")}_initKanbanView(e){const t=this;if(t._kanbanInitialized)return;t._kanbanInitialized=!0;const a=new Smart.Grid.Column({label:!e||e&&"blank"===e?t.localize("uncategorized"):t.localize("status"),description:t.localize("dialogAddColumnStatusDescription"),dataField:"taskStatus",showDescriptionButton:!0,dataType:"string",defaultValue:"uncategorized",editor:{template:"multiComboInput",readonly:!0,dropDownButtonPosition:"right",colorItems:!0,autoOpen:!0,pills:!0,singleSelect:!0,dataSource:[{color:"#DD5347",label:t.localize("uncategorized"),value:"uncategorized"},{color:"#33B679",label:t.localize("toDo"),value:"toDo"},{color:"#039BE5",label:t.localize("inProgress"),value:"inProgress"},{color:"#8E24AA",label:t.localize("done"),value:"done"}]},template:"tags",cellsAlign:"left",align:"left",grid:t,_view:!0});return t._onColumnUpdated=(e,a)=>{e._view&&(delete e._view,delete t._onColumnUpdated,e.allowSort=e.allowEdit=e.allowFilter=!0,"blank"===a.kanban&&(e.editor={template:"multiComboInput",readonly:!0,dropDownButtonPosition:"right",colorItems:!0,autoOpen:!0,pills:!0,singleSelect:!0,dataSource:[]}),t.beginUpdate(),t._createKanban(e),t._getKanbanTaskFields(e).forEach((e=>{t.columns.push(e)})),t.endUpdate(!1))},e&&"blank"===e?(delete a._view,a.editor={template:"multiComboInput",readonly:!0,dropDownButtonPosition:"right",colorItems:!0,autoOpen:!0,pills:!0,singleSelect:!0,dataSource:[]},a.allowSort=a.allowEdit=a.allowFilter=!0,a.label=t.localize("uncategorized"),t.beginUpdate(),t._createKanban(a),t._getKanbanTaskFields(a).forEach((e=>{t.columns.push(e)})),t._resetCachedLayout(),void t.endUpdate(!1)):e&&"basic"===e?(delete a._view,t.beginUpdate(),t._createKanban(a),t._getKanbanTaskFields(a).forEach((e=>{t.columns.push(e)})),t._resetCachedLayout(),void t.endUpdate(!1)):void t._openAddColumnDialog(a,!0,(e=>{!1===e&&(delete a._view,a.editor={template:"multiComboInput",readonly:!0,dropDownButtonPosition:"right",colorItems:!0,autoOpen:!0,pills:!0,singleSelect:!0,dataSource:[]},a.allowSort=a.allowEdit=a.allowFilter=!0,a.label=t.localize("uncategorized"),t.beginUpdate(),t._createKanban(a),t._getKanbanTaskFields(a).forEach((e=>{t.columns.push(e)})),t.endUpdate(!1))}))}_showKanbanView(){const e=this;e.$.viewContent.classList.remove("smart-hidden"),e.$.content.classList.add("smart-hidden"),e._showAddNewRowButton("float"),e.$.viewContent.appendChild(e._kanban),e.classList.add("smart-kanban-view"),e._updateKanbanView(),e._kanban.refresh()}_hideKanbanView(){const e=this;e.classList.contains("smart-kanban-view")&&(e.$.viewContent.classList.add("smart-hidden"),e.$.content.classList.remove("smart-hidden"),e._kanban.remove(),e.classList.remove("smart-kanban-view"),e._resetCachedLayout(),e.refresh())}_getPriorityDataSource(){const e=this;return[{color:"#33B679",label:e._kanban.localize("low"),value:"low"},{color:"#039BE5",label:e._kanban.localize("average"),value:"average"},{color:"#DD5347",label:e._kanban.localize("high"),value:"high"},{color:"#AF0020",label:e._kanban.localize("critical"),value:"critical"}]}_getKanbanTaskFields(e){const t=this,a=[],l=new Smart.Grid.Column({label:t._kanban.localize("startDate"),dataField:"taskStartDate",cellsFormat:"d",showDescriptionButton:!0,dataType:"date",editor:{template:"dateInput",autoOpen:!0,onValidate:(e,a)=>!(e>a.taskDueDate&&a.taskDueDate&&e)||t.localize("invalidMaxValue",{value:t._kanban.localize("startDate"),max:a.taskDueDate.toLocaleDateString()})},visible:!0,grid:t}),n=new Smart.Grid.Column({label:t._kanban.localize("dueDate"),dataField:"taskDueDate",cellsFormat:"d",showDescriptionButton:!0,dataType:"date",editor:{template:"dateInput",autoOpen:!0,onValidate:(e,a)=>!(e<a.taskStartDate&&a.taskStartDate&&e)||t.localize("invalidMinValue",{value:t._kanban.localize("dueDate"),min:a.taskStartDate.toLocaleDateString()})},visible:!0,grid:t}),o=new Smart.Grid.Column({label:t._kanban.localize("priority"),dataField:"taskPriority",showDescriptionButton:!0,dataType:"string",editor:{template:"multiComboInput",readonly:!0,dropDownButtonPosition:"right",colorItems:!0,autoOpen:!0,pills:!0,singleSelect:!0,dataSource:t._getPriorityDataSource()},template:"tags",visible:!0,grid:t}),i=new Smart.Grid.Column({label:t._kanban.localize("tags"),dataField:"taskTags",showDescriptionButton:!0,dataType:"string",template:"tags",visible:!0,grid:t}),s=new Smart.Grid.Column({label:t._kanban.localize("progress"),dataField:"taskProgress",showDescriptionButton:!0,dataType:"number",cellsFormat:"p0",editor:{template:"numberInput",min:0,max:1},visible:!0,grid:t}),r=new Smart.Grid.Column({label:t._kanban.localize("description"),dataField:"taskDescription",showDescriptionButton:!0,editor:{template:"textarea"},dataType:"string",visible:!0,grid:t}),d=new Smart.Grid.Column({label:t._kanban.localize("text"),dataField:"taskText",showDescriptionButton:!0,dataType:"string",visible:!0,grid:t}),c=new Smart.Grid.Column({label:t._kanban.localize("checklist"),dataField:"taskChecklist",showDescriptionButton:!0,allowSummary:!1,allowSort:!1,allowFilter:!1,disabledDialogOptions:["allowFilter","allowSort"],formatFunction(e){if(e.value&&Array.isArray(e.value)){const a=e.value.filter((e=>e.completed)).length;e.value=t.localize("completed",{value:a})+"/"+e.value.length}else e.value=""},editor:{template:'<smart-multi-combo-input style="height: 100%; max-height: 100%;"></smart-multi-combo-input>',settings:{inputTagsMode:"one",readonly:!0,allowItemsAdd:!0,allowItemsRemove:!0},onRender:function(e,a,l,n){const o="string"==typeof n[a]&&n[a]?JSON.parse(n[a]):n[a],i=[],s=l.firstElementChild;if(s.messages[t.locale].tagLabel=t._kanban.messages[t.locale].taskCompleted,s.messages[t.locale].tagLabelOne=t._kanban.messages[t.locale].taskCompleted,o){const e=o.map((e=>{const t={label:e.text,value:e.text};return e.completed&&i.push(t),t}));s.dataSource=e}else s.dataSource=[];s.selectedItems=i,t.editing.editRow||s.open()},setValue:function(){},getValue:function(){const e=this.firstElementChild;return e.dataSource.map((t=>{const a=e.selectedItems.find((e=>t.value===e.value));return{text:t.label,completed:void 0!==a}}))}},dataType:"any",visible:!0,grid:t});let u=!0;for(let e=0;e<t.columns.length;e++){const a=t.columns[e];if(a.editor&&a.editor.collaborator){u=!1;break}}if(a.push(d),a.push(r),a.push(e),a.push(l),a.push(n),a.push(s),a.push(o),a.push(i),a.push(c),u){let e=[""];for(let a=0;a<t.users.length;a++)e.push({label:t.users[a].name,value:t.users[a].id,id:t.users[a].id,image:t.users[a].image,color:t.users[a].color||""});const l=new Smart.Grid.Column({label:t._kanban.localize("assignedTo"),dataField:"taskUserId",showDescriptionButton:!0,editor:{template:"multiComboInput",readonly:!0,collaborator:!0,colorItems:!0,dropDownButtonPosition:"right",autoOpen:!0,pills:!0,singleSelect:!0,dataSource:e},dataType:"string",visible:!0,template:"tags",grid:t});a.push(l)}return a}getKanbanProperties(){const e=this;return e._kanbanProperties||(e._kanbanProperties={},e._kanbanProperties=Object.assign({},{taskColorEntireSurface:!1,collapsible:!0,addNewButton:!0,addNewColumn:!0,allowColumnRemove:!0,editable:!0,columnActions:!0,columnEditMode:"headerAndMenu",allowColumnEdit:!0,allowColumnReorder:!0,taskActions:!0,taskDue:!0,taskComments:!0,taskProgress:!0,columnSummary:!0,columnColors:!0})),e._kanbanProperties}setKanbanProperties(e){const t=this.getKanbanProperties();for(let a in e)t[a]=e[a]}_updateKanbanView(e){const t=this;if(!t._kanban)return;e||(e=t.columnByDataField.taskStatus);const a=t._kanban,l=a.context;a.context=a;const n=e.editor.dataSource&&e.editor.dataSource.length>0?e.editor.dataSource:[{label:e.label,value:e.value,color:"#33B679"}];a.users=t.users,a.currentUser=t.currentUser;const o=t.getKanbanProperties();for(let e in o)a[e]=o[e];let i=[];for(let e=0;e<n.length;e++){const t=n[e];i.push({label:t.label,value:t.value,status:t.value,dataField:t.value,color:t.color})}a.columns=i;let s=[];for(let e=0;e<t.columns.length;e++){const a=t.columns[e];a.dataField.startsWith("task")||s.push({name:a.dataField,dataType:a.dataType})}a.taskCustomFields=s;const r=[];for(let e=0;e<t.dataSource.length;e++){const a=t.dataSource[e],l={};for(let e in a){if(e.startsWith("$"))continue;const t=a[e];if(e.startsWith("task")){let a=e.replace("task","");a=a.substring(0,1).toLowerCase()+a.substring(1),l[a]=t}else l[e]=t}l.id=a.$.id,r.push(l)}a.dataSource=r,a.context=l}_getTaskData(e){const t=this,a={},l=t._kanban;for(let n=0;n<t.columns.length;n++){const o=t.columns[n].dataField;if(o.startsWith("task")){let l=o.replace("task","");if(l=l.substring(0,1).toLowerCase()+l.substring(1),"checklist"===l){a[o]=JSON.stringify(e.checklist);continue}if("history"===l&&(a[o]=JSON.stringify(e.history)),void 0===e[l])continue;if("status"===l){const n=t._kanban.getColumn(e[l]),i=[{label:e[l],value:e[l],color:n.color}];a[o]=JSON.stringify(i)}else if("priority"===l){const n=t._getPriorityDataSource(),i=e[l],s=n.find((e=>e===i||e.label===i||void 0)),r=[{label:i,value:i,color:s?s.color:"transparent"}];a[o]=JSON.stringify(r)}else a[o]=e[l]}else l.taskCustomFields&&l.taskCustomFields.length&&l.taskCustomFields.find((e=>e.name===o))&&(a[o]=e[o])}return a}_createKanban(e){const t=this;if(t._kanban)return;const a=document.createElement("smart-kanban");t._kanban=a,t._updateKanbanView(e),a.style.width="100%",a.style.height="100%","kanban"===t.view&&(t.$.viewContent.classList.remove("smart-hidden"),t.$.content.classList.add("smart-hidden")),t.onViewInit&&t.onViewInit(a),t.$.viewContent.appendChild(a),"kanban"===t.view&&t.classList.add("smart-kanban-view"),t.editing.addNewColumn._addButton&&t.editing.addNewColumn._addButton.classList.remove("show"),a.addEventListener("columnUpdate",(()=>{})),a.addEventListener("taskAdd",(e=>{const a=e.detail.value,l=t._getTaskData(a);t._onRowInserted=e=>{a.id=e.id},t.addRow(l,!0,(e=>{a.id=e.id})),delete t._onRowInserted})),a.addEventListener("taskRemove",(e=>{t.removeRow(e.detail.id)})),a.addEventListener("taskUpdate",(e=>{const a=e.detail.value,l=t._getTaskData(a);t.updateRow(e.detail.id,l)}))}});