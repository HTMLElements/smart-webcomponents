
/* Smart UI v13.1.1 (2022-03-23) 
Copyright (c) 2011-2021 jQWidgets. 
License: https://htmlelements.com/license/ */ //

Smart.Utilities.Assign("Grid.View",class{createBasicKanban(){this._initKanbanView("basic")}createBlankKanban(){this._initKanbanView("blank")}_initKanbanView(e){const t=this;if(t._kanbanInitialized)return;if(t.columnByDataField&&t.columnByDataField.taskStatus)return t._kanbanInitialized=!0,void(t._kanban||(t._createKanban(t.columnByDataField.taskStatus),t._refreshHeaderBar()));t._kanbanInitialized=!0;const a=new Smart.Grid.Column({label:!e||e&&"blank"===e?t.localize("uncategorized"):t.localize("status"),description:t.localize("dialogAddColumnStatusDescription"),dataField:"taskStatus",showDescriptionButton:!0,dataType:"string",defaultValue:"uncategorized",editor:{template:"multiComboInput",readonly:!0,dropDownButtonPosition:"right",colorItems:!0,autoOpen:!0,pills:!0,singleSelect:!0,dataSource:[{color:"#DD5347",label:t.localize("uncategorized"),value:"uncategorized"},{color:"#33B679",label:t.localize("toDo"),value:"toDo"},{color:"#039BE5",label:t.localize("inProgress"),value:"inProgress"},{color:"#8E24AA",label:t.localize("done"),value:"done"}]},template:"tags",cellsAlign:"left",align:"left",grid:t,_view:!0});return t._onColumnUpdated=(e,a)=>{e._view&&(delete e._view,delete t._onColumnUpdated,e.allowSort=e.allowEdit=e.allowFilter=!0,"blank"===a.kanban&&(e.editor={template:"multiComboInput",readonly:!0,dropDownButtonPosition:"right",colorItems:!0,autoOpen:!0,pills:!0,singleSelect:!0,dataSource:[]}),t.beginUpdate(),t._createKanban(e),t._getKanbanTaskFields(e).forEach((e=>{t.columns.push(e)})),t._refreshHeaderBar(),t.endUpdate(!1))},e&&"blank"===e?(delete a._view,a.editor={template:"multiComboInput",readonly:!0,dropDownButtonPosition:"right",colorItems:!0,autoOpen:!0,pills:!0,singleSelect:!0,dataSource:[]},a.allowSort=a.allowEdit=a.allowFilter=!0,a.label=t.localize("uncategorized"),t.beginUpdate(),t._createKanban(a),t._getKanbanTaskFields(a).forEach((e=>{t.columns.push(e)})),t._resetCachedLayout(),t._refreshHeaderBar(),void t.endUpdate()):e&&"basic"===e?(delete a._view,t.beginUpdate(),t._createKanban(a),t._getKanbanTaskFields(a).forEach((e=>{t.columns.push(e)})),t._resetCachedLayout(),t._refreshHeaderBar(),void t.endUpdate()):void t._openAddColumnDialog(a,!0,(e=>{!1===e&&(delete a._view,a.editor={template:"multiComboInput",readonly:!0,dropDownButtonPosition:"right",colorItems:!0,autoOpen:!0,pills:!0,singleSelect:!0,dataSource:[]},a.allowSort=a.allowEdit=a.allowFilter=!0,a.label=t.localize("uncategorized"),t.beginUpdate(),t._createKanban(a),t._getKanbanTaskFields(a).forEach((e=>{t.columns.push(e)})),t._refreshHeaderBar(),t.endUpdate(!1))}))}_showKanbanView(){const e=this;e.beginUpdate(),e.$.viewContent.classList.remove("smart-hidden"),e.$.content.classList.add("smart-hidden"),e._showAddNewRowButton("float"),e.$.viewContent.appendChild(e._kanban),e.classList.add("smart-kanban-view"),e._updateKanbanView(),e._kanban.refresh(),e._onFilter=e._onSort=()=>{"kanban"===e.view&&(e._updateKanbanView(),e._kanban.refresh())}}_hideKanbanView(){const e=this;e.classList.contains("smart-kanban-view")&&(e.$.viewContent.classList.add("smart-hidden"),e.$.content.classList.remove("smart-hidden"),e._kanban.remove(),e.classList.remove("smart-kanban-view"),e._resetCachedLayout(),e.dataSource.boundHierarchy&&(e.dataSource.refreshHierarchy(),e._refreshRowHierarchy(!0,!0)),e.endUpdate(),e.dataSource.boundHierarchy&&e._recycle())}_getPriorityDataSource(){const e=this;return[{color:"#33B679",label:e._kanban.localize("low"),value:"low"},{color:"#039BE5",label:e._kanban.localize("average"),value:"average"},{color:"#DD5347",label:e._kanban.localize("high"),value:"high"},{color:"#AF0020",label:e._kanban.localize("critical"),value:"critical"}]}_getKanbanTaskFields(e){const t=this,a=[],o=new Smart.Grid.Column({label:t._kanban.localize("startDate"),dataField:"taskStartDate",cellsFormat:"d",showDescriptionButton:!0,dataType:"date",allowDelete:!1,editor:{template:"dateInput",autoOpen:!0,onValidate:(e,a)=>!(e>a.taskDueDate&&a.taskDueDate&&e)||t.localize("invalidMaxValue",{value:t._kanban.localize("startDate"),max:a.taskDueDate.toLocaleDateString()})},visible:!1,_visible:!1,grid:t}),l=new Smart.Grid.Column({label:t._kanban.localize("dueDate"),dataField:"taskDueDate",cellsFormat:"d",showDescriptionButton:!0,allowDelete:!1,dataType:"date",editor:{template:"dateInput",autoOpen:!0,onValidate:(e,a)=>!(e<a.taskStartDate&&a.taskStartDate&&e)||t.localize("invalidMinValue",{value:t._kanban.localize("dueDate"),min:a.taskStartDate.toLocaleDateString()})},visible:!1,_visible:!1,grid:t}),n=new Smart.Grid.Column({label:t._kanban.localize("priority"),dataField:"taskPriority",showDescriptionButton:!0,dataType:"string",visible:!1,_visible:!1,allowDelete:!1,defaultValue:"average",disabledDialogOptions:["allowColorItems","options"],editor:{template:"multiComboInput",readonly:!0,allowEmptyItem:!1,disabledDialogOptions:!0,dropDownButtonPosition:"right",colorItems:!0,autoOpen:!0,pills:!0,singleSelect:!0,dataSource:t._getPriorityDataSource()},template:"tags",grid:t}),i=new Smart.Grid.Column({label:t._kanban.localize("tags"),dataField:"taskTags",allowDelete:!1,visible:!1,_visible:!1,showDescriptionButton:!0,dataType:"string",template:"tags",grid:t}),s=new Smart.Grid.Column({label:t._kanban.localize("progress"),dataField:"taskProgress",showDescriptionButton:!0,allowDelete:!1,visible:!1,_visible:!1,disabledDialogOptions:["numberFormat","minValue","maxValue"],dataType:"number",cellsFormat:"p0",template:"progress",editor:{disabledDialogOptions:!0,template:"numberInput",min:0,max:1},grid:t}),r=new Smart.Grid.Column({label:t._kanban.localize("description"),dataField:"taskDescription",allowDelete:!1,showDescriptionButton:!0,editor:{template:"textarea"},dataType:"string",visible:!0,grid:t}),d=new Smart.Grid.Column({label:t._kanban.localize("text"),allowDelete:!1,dataField:"taskText",showDescriptionButton:!0,dataType:"string",visible:!0,grid:t}),c=new Smart.Grid.Column({label:t._kanban.localize("checklist"),dataField:"taskChecklist",showDescriptionButton:!0,allowSort:!1,allowDelete:!1,allowFilter:!1,visible:!1,_visible:!1,disabledDialogOptions:["allowFilter","allowSort"],formatFunction(e){if(e.value&&Array.isArray(e.value)){const a=e.value.filter((e=>e.completed)).length;e.value=t.localize("completed",{value:a})+"/"+e.value.length}else e.value=""},editor:{template:"<smart-multi-combo-input></smart-multi-combo-input>",settings:{inputTagsMode:"one",readonly:!0,allowItemsAdd:!0,allowItemsRemove:!0},onRender:function(e,a,o,l){const n="string"==typeof l[a]&&l[a]?JSON.parse(l[a]):l[a],i=[],s=o.firstElementChild;if(s.messages[t.locale].tagLabel=t._kanban.messages[t.locale].taskCompleted,s.messages[t.locale].tagLabelOne=t._kanban.messages[t.locale].taskCompleted,n){const e=n.map((e=>{const t={label:e.text,value:e.text};return e.completed&&i.push(t),t}));s.dataSource=e}else s.dataSource=[];s.selectedItems=i,t.editing.editRow||s.open()},setValue:function(){},getValue:function(){const e=this.firstElementChild;return e.dataSource.map((t=>{const a=e.selectedItems.find((e=>t.value===e.value));return{text:t.label,completed:void 0!==a}}))}},dataType:"any",grid:t});let u=!0;for(let e=0;e<t.columns.length;e++){const a=t.columns[e];if(a.editor&&a.editor.collaborator){u=!1;break}}if(a.push(d),a.push(r),a.push(e),a.push(o),a.push(l),a.push(s),a.push(n),a.push(i),a.push(c),u){let e=[""];for(let a=0;a<t.users.length;a++)e.push({label:t.users[a].name,value:t.users[a].id,id:t.users[a].id,image:t.users[a].image,color:t.users[a].color||""});const o=new Smart.Grid.Column({label:t._kanban.localize("assignedTo"),allowDelete:!1,dataField:"taskUserId",showDescriptionButton:!0,disabledDialogOptions:["allowColorItems","options"],editor:{template:"multiComboInput",readonly:!0,collaborator:!0,disabledDialogOptions:!0,colorItems:!0,dropDownButtonPosition:"right",autoOpen:!0,pills:!0,singleSelect:!0,dataSource:e},dataType:"string",visible:!0,template:"tags",grid:t});a.push(o)}return t._kanbanViewColumns=[o,l,s,n,i,c],a}getKanbanProperties(){const e=this;return e._kanbanProperties||(e._kanbanProperties={},e._kanbanProperties=Object.assign({},{taskColorEntireSurface:!1,collapsible:!0,addNewButton:!0,addNewButtonDisplayMode:"both",addNewColumn:!0,allowColumnRemove:!0,editable:!0,columnActions:!0,columnEditMode:"headerAndMenu",allowColumnEdit:!0,allowColumnReorder:!0,taskActions:!0,taskDue:!0,taskComments:!0,taskProgress:!0,columnSummary:!0,columnColors:!0})),e._kanbanProperties}setKanbanProperties(e){const t=this.getKanbanProperties();for(let a in e)void 0!==e[a]&&void 0!==t[a]&&(t[a]=e[a]);this._kanbanProperties=t}_updateKanbanView(e){const t=this;if(!t._kanban)return;e||(e=t.columnByDataField.taskStatus);const a=t._kanban,o=a.context;a.context=a;const l=e.editor.dataSource&&e.editor.dataSource.length>0?e.editor.dataSource:[{label:e.label,value:e.value,color:"#33B679"}];a.users=t.users,a.currentUser=t.currentUser;const n=t.getKanbanProperties();for(let e in n)a[e]=n[e];let i=[];for(let e=0;e<l.length;e++){const t=l[e];i.push({label:t.label,value:t.value,status:t.value,dataField:t.value,color:t.color})}a.columns=i;let s=[];for(let e=0;e<t.columns.length;e++){const a=t.columns[e];if(a.dataField.startsWith("task"))continue;if(!1===a.allowEdit)continue;s.push({label:a.label||"",dataField:a.dataField,dataType:a.dataType,editor:a.editor.template});const o=s[s.length-1];a.editor.dataSource&&(o.dataSource=[...a.editor.dataSource]),a.editor.colorItems&&(o.colorItems=a.editor.colorItems),a.editor.colorItems&&(o.pills=a.editor.pills),a.editor.colorItems&&(o.singleSelect=a.editor.singleSelect),a.editor.dropDownButtonPosition&&(o.dropDownButtonPosition=a.editor.dropDownButtonPosition),["min","max","minLength","maxLength","minDate","maxDate"].forEach((e=>{void 0!==a.editor[e]&&(o[e]=a.editor[e])}))}a.taskCustomFields=s;const r=[];for(let e=0;e<t.dataSource.length;e++){const a=t.dataSource[e],o={},l=a.$.id;if(!1===a.$.filtered)continue;const n=t.rowById[l];n&&(o.history=n.history,n.comments&&(o.comments=n.comments));for(let e in a){if(e.startsWith("$"))continue;let t=a[e];if(e.startsWith("task")){let a=e.replace("task","");a=a.substring(0,1).toLowerCase()+a.substring(1),"progress"===a&&(t=100*parseFloat(t)),o[a]=t}else o[e]=t}o.id=a.$.id,r.push(o)}a.dataSource=r,a.context=o}_getTaskData(e){const t=this,a={},o=t._kanban;for(let l=0;l<t.columns.length;l++){const n=t.columns[l].dataField;if(n.startsWith("task")){let t=n.replace("task","");if(t=t.substring(0,1).toLowerCase()+t.substring(1),"checklist"===t){a[n]=e.checklist;continue}if("history"===t&&(a[n]=e.history),void 0===e[t])continue;if("status"===t)a[n]=e[t];else if("priority"===t){const o=e[t];a[n]=o}else a[n]="progress"===t?parseFloat(e[t])/100:e[t]}else o.taskCustomFields&&o.taskCustomFields.length&&o.taskCustomFields.find((e=>e.dataField===n))&&(a[n]=e[n])}return a}_createKanban(e){const t=this;if(t._kanban)return;const a=document.createElement("smart-kanban");t._kanban=a,t._updateKanbanView(e),a.style.width="100%",a.style.height="100%","kanban"===t.view&&(t.$.viewContent.classList.remove("smart-hidden"),t.$.content.classList.add("smart-hidden")),t.onViewInit&&t.onViewInit(a),t.$.viewContent.appendChild(a),"kanban"===t.view&&t.classList.add("smart-kanban-view"),t.editing.addNewColumn._addButton&&t.editing.addNewColumn._addButton.classList.remove("show");const o=()=>{const e=this.columnByDataField.taskStatus,t=this._kanban,a=[];for(let e=0;e<t.columns.length;e++){const o=t.columns[e],l={label:o.label,value:o.dataField,color:o.color};a.push(l)}e.editor.isDirty=!0,e.editor.dataSource=a};a.addEventListener("columnUpdate",(()=>{o()})),a.addEventListener("columnAdd",(()=>{o()})),a.addEventListener("columnRemove",(()=>{o()})),a.addEventListener("taskAdd",(e=>{const a=e.detail.value,o=t._getTaskData(a);t._onRowInserted=e=>{a.id=e.id},t.addRow(o,!0,(e=>{a.id=e.id})),t._refreshHeaderBar(),delete t._onRowInserted})),a.addEventListener("taskRemove",(e=>{t.removeRow(e.detail.id),t._refreshHeaderBar()})),a.addEventListener("taskUpdate",(e=>{const a=e.detail.value,o=t._getTaskData(a);t.updateRow(e.detail.id,o);const l=t.rowById[e.detail.id];l&&(l.history=a.history,l.comments=a.comments)}))}});