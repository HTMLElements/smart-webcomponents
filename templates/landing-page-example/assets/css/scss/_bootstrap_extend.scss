@import "_vars";

/* *******************************************
 **************** Bootstrap Extend *************** *
 ******************************************* */

html{
  scroll-behavior: smooth;
}

@media (min-width: 768px) and (max-width: 991px) {
  .container {
    width: 90%;
  }
}

@media (max-width: 1365px) {
  .container,
  .container,
  .container {
    width: 90%;
    max-width: 90%;
  }
}

@media (max-width: 991px) {
  .container,
  .container,
  .container {
    width: 100%;
    max-width: 100%;
  }
}

.img-as-background {
  position: relative;
  overflow: hidden;

  img {
    object-fit: cover;
    position: absolute;
    left: -1px;
    right: 0;
    z-index: 0;
    margin: 0 auto;
    top: 0;
    bottom: 0;
    min-width: calc(100% + 2px);
    min-height: 100%;
  }
}

.btn-rounded {
  border-radius: 30px;
}

.btn-link {
  padding: 3px;
}

.rounded-xl {
  border-radius: $rounded-xl;
}

.border-left-2 {
  border-left-width: 2px !important;
}

.border-left-3 {
  border-left-width: 3px !important;
}

.border-left-4 {
  border-left-width: 4px !important;
}

.border-left-5 {
  border-left-width: 5px !important;
}

/* Spacings */
// stylelint-disable declaration-no-important

// Margin and Padding

$spacer: 1rem;
$spacers: (
        0: 0,
        1: ($spacer * .25),
        2: ($spacer * .5),
        3: ($spacer * .75),
        4: ($spacer * 1),
        5: ($spacer * 1.5),
        6: ($spacer * 2),
        7: ($spacer * 3),
        8: ($spacer * 5),
        9: ($spacer * 7),
        10: ($spacer * 9),
        11: ($spacer * 11),
        12: ($spacer * 13),
        13: ($spacer * 16)
);

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $length in $spacers {
        .#{$abbrev}#{$infix}-#{$size} {
          #{$prop}: $length !important;
        }
        .#{$abbrev}t#{$infix}-#{$size},
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-top: $length !important;
        }
        .#{$abbrev}r#{$infix}-#{$size},
        .#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-right: $length !important;
        }
        .#{$abbrev}b#{$infix}-#{$size},
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-bottom: $length !important;
        }
        .#{$abbrev}l#{$infix}-#{$size},
        .#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-left: $length !important;
        }
      }
    }

    // Negative margins (e.g., where `.mb-n1` is negative version of `.mb-1`)
    @each $size, $length in $spacers {
      @if $size != 0 {
        .m#{$infix}-n#{$size} {
          margin: -$length !important;
        }
        .mt#{$infix}-n#{$size},
        .my#{$infix}-n#{$size} {
          margin-top: -$length !important;
        }
        .mr#{$infix}-n#{$size},
        .mx#{$infix}-n#{$size} {
          margin-right: -$length !important;
        }
        .mb#{$infix}-n#{$size},
        .my#{$infix}-n#{$size} {
          margin-bottom: -$length !important;
        }
        .ml#{$infix}-n#{$size},
        .mx#{$infix}-n#{$size} {
          margin-left: -$length !important;
        }
      }
    }

    // Some special margin utils
    .m#{$infix}-auto {
      margin: auto !important;
    }
    .mt#{$infix}-auto,
    .my#{$infix}-auto {
      margin-top: auto !important;
    }
    .mr#{$infix}-auto,
    .mx#{$infix}-auto {
      margin-right: auto !important;
    }
    .mb#{$infix}-auto,
    .my#{$infix}-auto {
      margin-bottom: auto !important;
    }
    .ml#{$infix}-auto,
    .mx#{$infix}-auto {
      margin-left: auto !important;
    }
  }
}

//----------------------------------------------------/
// Element size
//----------------------------------------------------/
$element-sizes-list: 40 50 80 125 150 175 200 250 300 350 400 450 500 550 600 650 700 750 800 900;
@each $value in $element-sizes-list {
  .w-#{$value} {
    width: #{$value}px !important;
  }

  .h-#{$value} {
    height: #{$value}px !important;
  }

  .mw-#{$value} {
    min-width: #{$value}px !important;
  }
  .maxw-#{$value} {
    max-width: #{$value}px !important;
  }

  .mh-#{$value} {
    min-height: #{$value}px !important;
  }

  .maxh-#{$value} {
    max-height: #{$value}px !important;
  }
}

@for $i from 1 through 20 {
  .w-#{$i*5}px {
    width: #{$i*5}px !important;
  }

  .h-#{$i*5}px {
    height: #{$i*5}px !important;
  }
}

//----------------------------------------------------/
// Extra
//----------------------------------------------------/
.h-auto {
  height: auto;
}

.w-auto {
  width: auto;
}

.w-fullscreen, .w-100vw {
  width: 100vw !important;
}

.h-fullscreen, .h-100vh {
  height: 100vh !important;
}

.h-50vh {
  height: 50vh !important;
}

.mw-fullscreen, .mw-100vw {
  min-width: 100vw !important;
}

.mh-fullscreen, .mh-100vh {
  min-height: 100vh !important;
}

.mh-50vh {
  min-height: 50vh !important;
}

// In small screen devices, 100vh might not be enough
@media (max-height: 640px) {
  .h-fullscreen {
    height: auto !important;
    //min-height: 100vh !important;
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    // Common values
    @each $position in $positions {
      .position#{$infix}-#{$position} {
        position: $position !important;
      }
    }
  }
}

/* HR */
hr {
  border-color: rgba(red($dark), green($dark), blue($dark), .1);
}

.element-hr {
  display: block;
  content: '';
  min-width: 65px;
  width: 10%;
  height: 4px;
  background-color: $primary;
  margin-top: 15px;
  margin-bottom: 15px;
}

.element-hr-underlined {
  padding-top: 10px;
  padding-bottom: 10px;
  position: relative;
  width: 100%;
  display: block;
  clear: both;

  &:before {
    display: block;
    content: '';
    width: 65px;
    height: 4px;
    background-color: $primary;
    position: absolute;
  }

  &:after {
    position: absolute;
    display: block;
    content: '';
    width: 100%;
    height: 1px;
    background-color: rgba(red($dark), green($dark), blue($dark), .1);

  }
}

/* Square */
.square:after {
  content: "";
  display: block;
  padding-bottom: 100%;
}

.square-75:after {
  content: "";
  display: block;
  padding-bottom: 75%;
}

.square-50:after {
  content: "";
  display: block;
  padding-bottom: 50%;
}

/* Overlay */

/* Background */
.background-image-holder {
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  position: static;

  > div {
    z-index: 3;
  }
}

.background-video-holder {
  position: absolute;
  left: 0;
  top: 0;
  z-index: 0;
  width: 100%;
  height: 100%;

  > div {
    z-index: 3;
  }

  .video {
    padding: 56.34% 0 0 0;
    position: relative;
    height: 100%;
    pointer-events: none;
  }

  .placeholder {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center center;
    background-repeat: no-repeat;
  }
}

[data-bg-contain] .background-image-holder {
  background-size: contain;
}

[data-parallax] .background-image-holder {
  background-attachment: fixed;
}

@media screen and (max-width: 767px) {
  [data-parallax] .background-image-holder {
    background-attachment: scroll;
  }
}

[data-background-position="center top"] .background-image-holder {
  background-position: center top;
}

[data-background-position="center bottom"] .background-image-holder {
  background-position: center bottom;
}

[background-position="center center"] .background-image-holder {
  background-position: center center;
}

[background-position="right center"] .background-image-holder {
  background-position: right center;
}

[background-position="left center"] .background-image-holder {
  background-position: left center;
}

[data-overlay] {
  position: relative;
}

[data-overlay] .background-image-holder:after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-image: linear-gradient(to bottom right, $secondary, darken($secondary, 10%));
  opacity: 0.5;
  z-index: 2;
  pointer-events: none;
}

[data-overlay] .background-image-holder.rounded-xl:after {
  border-radius: $rounded-xl;
}

[data-overlay] .background-video-holder:after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-image: linear-gradient(to bottom right, $secondary, darken($secondary, 10%));
  opacity: 0.5;
  z-index: 9;
  pointer-events: none;
}

[data-overlay-inverse] .background-image-holder:after,
[data-overlay-inverse] .background-video-holder:after {
  background-image: linear-gradient(to bottom right, $primary, darken($primary, 10%));
}

[data-overlay-black] .background-image-holder:after,
[data-overlay-black] .background-video-holder:after {
  background-image: linear-gradient(to bottom right, #000, #000);
}

[data-overlay-primary] .background-image-holder:after,
[data-overlay-primary] .background-video-holder:after {
  background-image: linear-gradient(to bottom right, $primary, darken($primary, 10%));
}

[data-overlay="1"] .background-image-holder:after,
[data-overlay="1"] .background-video-holder:after {
  opacity: 0.1;
}

[data-overlay="2"] .background-image-holder:after,
[data-overlay="2"] .background-video-holder:after {
  opacity: 0.2;
}

[data-overlay="3"] .background-image-holder:after,
[data-overlay="3"] .background-video-holder:after {
  opacity: 0.3;
}

[data-overlay="4"] .background-image-holder:after,
[data-overlay="4"] .background-video-holder:after {
  opacity: 0.4;
}

[data-overlay="5"] .background-image-holder:after,
[data-overlay="5"] .background-video-holder:after {
  opacity: 0.5;
}

[data-overlay="6"] .background-image-holder:after,
[data-overlay="6"] .background-video-holder:after {
  opacity: 0.6;
}

[data-overlay="7"] .background-image-holder:after,
[data-overlay="7"] .background-video-holder:after {
  opacity: 0.7;
}

[data-overlay="8"] .background-image-holder:after,
[data-overlay="8"] .background-video-holder:after {
  opacity: 0.8;
}

[data-overlay="9"] .background-image-holder:after,
[data-overlay="9"] .background-video-holder:after {
  opacity: 0.9;
}

[data-overlay="10"] .background-image-holder:after,
[data-overlay="10"] .background-video-holder:after {
  opacity: 1;
}

/* Lead */

.lead,
.lead-1 {
  font-size: 1.15rem;
}

.lead-2 {
  font-size: $h5-font-size;
}

.lead-3 {
  font-size: $h4-font-size;
}

.container-fluid-right-col-in-container {
  padding-right: calc((100vw - 1140px) / 2);
}

//----------------------------------------------------/
// Box shadow
//----------------------------------------------------/
.shadow-0, .hover-shadow-0:hover {
  box-shadow: none;
}

.shadow-1, .hover-shadow-1:hover {
  box-shadow: 0 0 4px rgba(#000, 0.1);
}

.shadow-2, .hover-shadow-2:hover {
  box-shadow: 0 0 8px rgba(#000, 0.1);
}

.shadow-3, .hover-shadow-3:hover {
  box-shadow: 0 0 12px rgba(#000, 0.1);
}

.shadow-4, .hover-shadow-4:hover {
  box-shadow: 0 0 18px rgba(#000, 0.1);
}

.shadow-5, .hover-shadow-5:hover {
  box-shadow: 0 0 26px rgba(#000, 0.1);
}

.shadow-6, .hover-shadow-6:hover {
  box-shadow: 0 0 36px rgba(#000, 0.1);
}

.shadow-7, .hover-shadow-7:hover {
  box-shadow: 0 0 48px rgba(#000, 0.1);
}

.shadow-8, .hover-shadow-8:hover {
  box-shadow: 0 0 60px rgba(#000, 0.1);
}

.shadow-9, .hover-shadow-9:hover {
  box-shadow: 0 0 74px rgba(#000, 0.1);
}

//----------------------------------------------------/
// Background on hover
//----------------------------------------------------/
.hover-bg-primary {
  &:hover {
    background-color: $primary !important;
  }

  &.hover-text-light {
    &:hover {
      .text-primary {
        color: $light !important;
      }
    }
  }

  &.hover-text-dark {
    &:hover {
      .text-primary {
        color: $dark !important;
      }
    }
  }
}

.hover-bg-secondary:hover {
  background-color: $secondary !important;

  &.hover-text-light {
    &:hover {
      .text-primary {
        color: $light !important;
      }
    }
  }

  &.hover-text-dark {
    &:hover {
      .text-primary {
        color: $dark !important;
      }
    }
  }
}

.hover-bg-success:hover {
  background-color: $success !important;
}

.hover-bg-danger:hover {
  background-color: $danger !important;
}

.hover-bg-warning:hover {
  background-color: $warning !important;
}

.hover-bg-info:hover {
  background-color: $info !important;
}

.hover-bg-light:hover {
  background-color: $light !important;
}

.hover-bg-white:hover {
  background-color: $white !important;
}

.hover-bg-dark:hover {
  background-color: $dark !important;
}

//----------------------------------------------------/
// Background on hover
//----------------------------------------------------/
.hover-text-primary:hover {
  color: $primary !important;
}

.hover-text-secondary:hover {
  color: $secondary !important;
}

.hover-text-success:hover {
  color: $success !important;
}

.hover-text-danger:hover {
  color: $danger !important;
}

.hover-text-warning:hover {
  color: $warning !important;
}

.hover-text-info:hover {
  color: $info !important;
}

.hover-text-light:hover {
  color: $light !important;
}

.hover-text-dark:hover {
  color: $dark !important;
}

//----------------------------------------------------/
// Border color
//----------------------------------------------------/
.border-color-primary {
  border-color: $primary !important;
}

.border-color-secondary {
  border-color: $secondary !important;
}

.border-color-success {
  border-color: $success !important;
}

.border-color-danger {
  border-color: $danger !important;
}

.border-color-warning {
  border-color: $warning !important;
}

.border-color-info {
  border-color: $info !important;
}

.border-color-light {
  border-color: $light !important;
}

.border-color-dark {
  border-color: $dark !important;
}

.hover-border-color-primary:hover {
  border-color: $primary !important;
}

.hover-border-color-secondary:hover {
  border-color: $secondary !important;
}

.hover-border-color-success:hover {
  border-color: $success !important;
}

.hover-border-color-danger:hover {
  border-color: $danger !important;
}

.hover-border-color-warning:hover {
  border-color: $warning !important;
}

.hover-border-color-info:hover {
  border-color: $info !important;
}

.hover-border-color-light:hover {
  border-color: $light !important;
}

.hover-border-color-dark:hover {
  border-color: $dark !important;
}

.top-0 {
  top: 0;
}

.bottom-0 {
  bottom: 0;
}

.left-0 {
  left: 0;
}

.right-0 {
  right: 0;
}

.border-width-2 {
  border-width: 2px !important;
}

.border-width-3 {
  border-width: 3px !important;
}

.border-width-4 {
  border-width: 4px !important;
}

.text-decoration-no {
  text-decoration: none !important;
}

/* Opacity */

.bg-primary-opacity-1 {
  background: rgba(red($primary), green($primary), blue($primary), .1);
}

.bg-primary-opacity-2 {
  background: rgba(red($primary), green($primary), blue($primary), .2);
}

.bg-primary-opacity-3 {
  background: rgba(red($primary), green($primary), blue($primary), .3);
}

.bg-primary-opacity-4 {
  background: rgba(red($primary), green($primary), blue($primary), .4);
}

.bg-primary-opacity-5 {
  background: rgba(red($primary), green($primary), blue($primary), .5);
}

.bg-primary-opacity-6 {
  background: rgba(red($primary), green($primary), blue($primary), .6);
}

.bg-primary-opacity-7 {
  background: rgba(red($primary), green($primary), blue($primary), .7);
}

.bg-primary-opacity-8 {
  background: rgba(red($primary), green($primary), blue($primary), .8);
}

.bg-primary-opacity-9 {
  background: rgba(red($primary), green($primary), blue($primary), .9);
}

.bg-secondary-opacity-1 {
  background: rgba(red($secondary), green($secondary), blue($secondary), .1);
}

.bg-secondary-opacity-2 {
  background: rgba(red($secondary), green($secondary), blue($secondary), .2);
}

.bg-secondary-opacity-3 {
  background: rgba(red($secondary), green($secondary), blue($secondary), .3);
}

.bg-secondary-opacity-4 {
  background: rgba(red($secondary), green($secondary), blue($secondary), .4);
}

.bg-secondary-opacity-5 {
  background: rgba(red($secondary), green($secondary), blue($secondary), .5);
}

.bg-secondary-opacity-6 {
  background: rgba(red($secondary), green($secondary), blue($secondary), .6);
}

.bg-secondary-opacity-7 {
  background: rgba(red($secondary), green($secondary), blue($secondary), .7);
}

.bg-secondary-opacity-8 {
  background: rgba(red($secondary), green($secondary), blue($secondary), .8);
}

.bg-secondary-opacity-9 {
  background: rgba(red($secondary), green($secondary), blue($secondary), .9);
}

.bg-white-opacity-5 {
  background: rgba(red($white), green($white), blue($white), .5);
}

.bg-white-opacity-6 {
  background: rgba(red($white), green($white), blue($white), .6);
}

.bg-white-opacity-7 {
  background: rgba(red($white), green($white), blue($white), .7);
}

.bg-white-opacity-8 {
  background: rgba(red($white), green($white), blue($white), .8);
}

.bg-white-opacity-9 {
  background: rgba(red($white), green($white), blue($white), .9);
}

.text-opacity-1 {
  opacity: .1;
}

.text-opacity-2 {
  opacity: .2;
}

.text-opacity-3 {
  opacity: .3;
}

.text-opacity-4 {
  opacity: .4;
}

.text-opacity-5 {
  opacity: .5;
}

.text-opacity-6 {
  opacity: .6;
}

.text-opacity-7 {
  opacity: .7;
}

.text-opacity-8 {
  opacity: .8;
}

.text-opacity-9 {
  opacity: .9;
}

/* Text Line Breaks */
.text-break-line-1 {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  padding: 1px 0px;
  text-align: left;
}

.text-break-line-2 {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  padding: 1px 0px;
  text-align: left;
}

.text-break-line-3 {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  padding: 1px 0px;
  text-align: left;
}